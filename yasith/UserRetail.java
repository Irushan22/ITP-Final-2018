/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yasith;

import irushan_interfaces.main1;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
import javax.swing.*;

/**
 *
 * @author yasit
 */
public class UserRetail extends javax.swing.JFrame {
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    int InvoiceID;
    int SInvoiceID;
    int SSInvoiceID;
    int SCustomerID;
    String ProductID;
    //int ProductID; Kushan
    int Amount;
    
    int RID;
    
    String ProductName = null; 
    double Price = 0;  
    String Warranty=null;
    
    String CustomerName = null;
    double ProductTotalPrice= 0;
    
    
    int CustomerID;
    double TotalPrice = 0;
    double change=0;
    double PaidAmount=0;
    
    float points = 0;

    /**
     * Creates new form UserRetail
     */
    public UserRetail() {
        initComponents();
        con = DBconnection.connect();
        ShowDetails();
        setSize(1200,680);
        setResizable(false);
        
        getContentPane().setBackground(Color.WHITE);
    }
   public void tableload(){
       try {
           String sql = "select * from allretail";
        pst = con.prepareStatement(sql);
        rs = pst.executeQuery();
        RTable.setModel(DbUtils.resultSetToTableModel(rs));
       } catch (Exception e) {
       }
        
    }
   
   private void ShowDetailsInvoiceID()
    {
        try {
            con = DBconnection.connect(); 

            String sql = "SELECT InvoiceID,CustomerName,TotalRS,PaidRS,changeRS FROM invoice WHERE InvoiceID = "+ InvoiceID +"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            ITable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  
    private void ShowDetails()
    {
        try {
            con = DBconnection.connect(); 
            String sql = "SELECT RID,InvoiceID, CustomerID, customerName, ProductID, ProductName, Price, Amount, ProductTotalPrice, Warranty FROM allretail";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            RTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            
            System.out.println("ShowDetails error");
        }
    }
    
    private void ShowDetailsCurrentInvoice(int InvoiceID)
    {
        try {
            con = DBconnection.connect(); 
            String sql = "SELECT RID,InvoiceID, CustomerID, customerName, ProductID, ProductName, Price, Amount, ProductTotalPrice, Warranty FROM allretail WHERE InvoiceID = "+ InvoiceID +"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            RTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void ShowDetailsSearchedInvoice(int SInvoiceID)
    {
        try {
            con = DBconnection.connect(); 
            String sql = "SELECT RID, InvoiceID, CustomerID, customerName, ProductID, ProductName, Price, Amount, ProductTotalPrice, Warranty FROM allretail WHERE InvoiceID = "+ SInvoiceID +"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            RTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void ShowDetailsSearchedCustomer(String SCustomerID)
    {
        try {
            con = DBconnection.connect(); 
            String sql = "SELECT RID, InvoiceID, CustomerID, customerName, ProductID, ProductName, Price, Amount, ProductTotalPrice, Warranty FROM allretail WHERE CustomerID = "+ SCustomerID +"";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            RTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void ShowDetailsReceipt()
    {
        try {
            con = DBconnection.connect(); 
            String sql = "SELECT ProductID, ProductName, Price, Amount, ProductTotalPrice, Warranty FROM allretail WHERE InvoiceID = " + InvoiceID +" ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            ReceiptTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            
            System.out.println("ShowDetails error");
        }
    }
    
//    private void  ShowAvailablePoints();{
//    
//            System.out.println("dd");
//            try {
//                String b = "SELECT Name FROM customer_register WHERE ID = "+ CustomerID +"";
//               //String b = "SELECT CustomerName FROM customer WHERE CustomerID = "+ CustomerID +"";
//               pst = con.prepareStatement(b);
//               rs = pst.executeQuery(b);
//               
//               
//               
//            while (rs.next()){
//                    //System.out.println("this is while");
//               CustomerName=rs.getString(1);
//
//               System.out.println(CustomerName);
//               }
//                
//            } catch (SQLException e) {
//            }
//    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        RTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        ITable = new javax.swing.JTable();
        InvoiceIdBox = new javax.swing.JTextField();
        CustomerIdBox = new javax.swing.JTextField();
        ProductIdBox = new javax.swing.JTextField();
        AmountBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        calculateButton = new javax.swing.JButton();
        UpdateRBox = new javax.swing.JButton();
        DeleteRBox = new javax.swing.JButton();
        PaidRsBox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PayButton = new javax.swing.JButton();
        SearchByInvoiceIdBoxR = new javax.swing.JButton();
        SearchByCustomerIdBoxR = new javax.swing.JButton();
        SearchByInvoiceIdBoxI = new javax.swing.JButton();
        SearchByInvoiceIdBox = new javax.swing.JTextField();
        SearchByCustomerIdBox = new javax.swing.JTextField();
        SearchByInvoiceIdBox2 = new javax.swing.JTextField();
        UpdateIBox = new javax.swing.JButton();
        DeleteIBox = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        TotalRsLabel = new javax.swing.JLabel();
        ChangeRsLabel = new javax.swing.JLabel();
        ClearRButton = new javax.swing.JButton();
        ClearIButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ReceiptTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        UsedPointsBox = new javax.swing.JTextField();
        AvailablePointslabel = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        RTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(RTable);

        ITable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ITable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ITableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ITable);

        InvoiceIdBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceIdBoxActionPerformed(evt);
            }
        });
        InvoiceIdBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InvoiceIdBoxKeyPressed(evt);
            }
        });

        CustomerIdBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerIdBoxActionPerformed(evt);
            }
        });
        CustomerIdBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CustomerIdBoxKeyPressed(evt);
            }
        });

        ProductIdBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductIdBoxActionPerformed(evt);
            }
        });
        ProductIdBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ProductIdBoxKeyPressed(evt);
            }
        });

        AmountBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountBoxActionPerformed(evt);
            }
        });
        AmountBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AmountBoxKeyPressed(evt);
            }
        });

        jLabel1.setText("InvoiceId");

        jLabel2.setText("CustomerId");

        jLabel3.setText("ProductId");

        jLabel4.setText("Amount");

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        UpdateRBox.setText("Update");
        UpdateRBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRBoxActionPerformed(evt);
            }
        });

        DeleteRBox.setText("Delete");
        DeleteRBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("TotalRs");

        jLabel6.setText("PaidRs");

        jLabel7.setText("ChangeRs");

        PayButton.setText("Print Receipt");
        PayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayButtonActionPerformed(evt);
            }
        });

        SearchByInvoiceIdBoxR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/akitha_interfaces/images/icons8-update-left-rotation-13.png"))); // NOI18N
        SearchByInvoiceIdBoxR.setText("SearchByInvoiceId");
        SearchByInvoiceIdBoxR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByInvoiceIdBoxRActionPerformed(evt);
            }
        });

        SearchByCustomerIdBoxR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/akitha_interfaces/images/icons8-update-left-rotation-13.png"))); // NOI18N
        SearchByCustomerIdBoxR.setText("SearchByCustomerId");
        SearchByCustomerIdBoxR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByCustomerIdBoxRActionPerformed(evt);
            }
        });

        SearchByInvoiceIdBoxI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/akitha_interfaces/images/icons8-update-left-rotation-13.png"))); // NOI18N
        SearchByInvoiceIdBoxI.setText("SearchByInvoiceId");
        SearchByInvoiceIdBoxI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByInvoiceIdBoxIActionPerformed(evt);
            }
        });

        SearchByInvoiceIdBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByInvoiceIdBox2ActionPerformed(evt);
            }
        });

        UpdateIBox.setText("Update");
        UpdateIBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateIBoxActionPerformed(evt);
            }
        });

        DeleteIBox.setText("Delete");
        DeleteIBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteIBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("ReferenceID");

        ClearRButton.setText("Clear");
        ClearRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearRButtonActionPerformed(evt);
            }
        });

        ClearIButton.setText("Clear");
        ClearIButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearIButtonActionPerformed(evt);
            }
        });

        ReceiptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(ReceiptTable);

        jLabel10.setText("Available Points");

        jLabel11.setText("Used Points");

        UsedPointsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsedPointsBoxActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/akitha_interfaces/images/icons8-left-filled-13.png"))); // NOI18N
        jButton9.setText("Back");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton1.setText("Demo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel12.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ProductIdBox)
                                    .addComponent(AmountBox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2))
                                        .addGap(10, 10, 10)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(InvoiceIdBox)
                                        .addComponent(CustomerIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ClearRButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(calculateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ClearIButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PayButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(TotalRsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ChangeRsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PaidRsBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(UsedPointsBox)
                                            .addComponent(AvailablePointslabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(2, 2, 2))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addGap(128, 128, 128)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(SearchByInvoiceIdBoxR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchByCustomerIdBoxR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(UpdateRBox)
                        .addComponent(SearchByInvoiceIdBoxI, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(UpdateIBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeleteIBox)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(SearchByInvoiceIdBox)
                        .addComponent(SearchByCustomerIdBox)
                        .addComponent(DeleteRBox, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SearchByInvoiceIdBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchByInvoiceIdBoxR)
                            .addComponent(SearchByInvoiceIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchByCustomerIdBoxR)
                            .addComponent(SearchByCustomerIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(121, 121, 121)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateRBox)
                            .addComponent(DeleteRBox)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(InvoiceIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addGap(4, 4, 4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CustomerIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ProductIdBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addGap(4, 4, 4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AmountBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(calculateButton)
                                .addComponent(AddButton)
                                .addComponent(ClearRButton)))))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchByInvoiceIdBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchByInvoiceIdBoxI))
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateIBox)
                            .addComponent(DeleteIBox))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TotalRsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PaidRsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ChangeRsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(AvailablePointslabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(UsedPointsBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PayButton)
                                    .addComponent(ClearIButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(jButton9)
                        .addGap(77, 77, 77))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed

        InvoiceID = Integer.parseInt(InvoiceIdBox.getText());
        CustomerID = Integer.parseInt(CustomerIdBox.getText());
        ProductID = ProductIdBox.getText();
        //ProductID = Integer.parseInt(ProductIdBox.getText()); Kushan
        Amount = Integer.parseInt(AmountBox.getText());
        
        try {
            String a = "SELECT ItemCode,SalePrice FROM stock WHERE ItemCode = '"+ProductID+"'";
            
            pst = con.prepareStatement(a);
            rs = pst.executeQuery(a);
            
               while (rs.next()){
                   //System.out.println("this is while");
               ProductName=rs.getString(1);
               Price = Double.parseDouble(rs.getString(6));
               //Warranty=rs.getString(3);
              
               }
               Warranty="";
               
            System.out.println(ProductName+" "+Price+" "+Warranty);
            
               String b = "SELECT Name FROM customer_register WHERE ID = '"+ CustomerID +"'";
               //String b = "SELECT CustomerName FROM customer WHERE CustomerID = "+ CustomerID +"";
               pst = con.prepareStatement(b);
               rs = pst.executeQuery(b);
               
               
               
            while (rs.next()){
                    //System.out.println("this is while");
               CustomerName=rs.getString(1);

               
               }
            System.out.println(CustomerName);
            
            ProductTotalPrice = Price * Amount;
            
            System.out.println(ProductTotalPrice);
            
            

            //insert into retail table
            String g = "INSERT INTO allretail(InvoiceID,CustomerID,CustomerName,ProductID,ProductName,Price,Amount,ProductTotalPrice,Warranty) values ('"+ InvoiceID +"','"+ CustomerID +"','"+ CustomerName +"','"+ProductID+"','"+ProductName+"','"+Price+"','"+Amount+"','"+ProductTotalPrice+"','"+Warranty+"')";
            pst = con.prepareStatement(g);
            pst.execute();
            
            
        } catch (Exception e) {
            System.out.println("Add button action performed error");
            System.out.println(ProductName+" "+Price+" "+Warranty);
            System.out.println(CustomerName);
            System.out.println(ProductTotalPrice);

        }  
        ShowDetailsCurrentInvoice(InvoiceID);

        // TODO add your handling code here:
    }//GEN-LAST:event_AddButtonActionPerformed

    private void InvoiceIdBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceIdBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceIdBoxActionPerformed

    private void CustomerIdBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerIdBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerIdBoxActionPerformed

    private void ProductIdBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductIdBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductIdBoxActionPerformed

    private void SearchByInvoiceIdBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByInvoiceIdBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchByInvoiceIdBox2ActionPerformed

    private void UpdateRBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRBoxActionPerformed

    int y = JOptionPane.showConfirmDialog(null, "Are you sure you want to update entry?");
        
        if(y==0)
        {
        InvoiceID = Integer.parseInt(InvoiceIdBox.getText());
        CustomerID = Integer.parseInt(CustomerIdBox.getText());
        ProductID = ProductIdBox.getText();
        //ProductID = Integer.parseInt(ProductIdBox.getText()); Kushan
        Amount = Integer.parseInt(AmountBox.getText());
        
        try {
            String a = "SELECT ItemCode,Saleprice,Warranty FROM stock WHERE ItemCode = "+ProductID+"";
            
//            pst = con.prepareStatement(a);
//            rs = pst.executeQuery(a);
            
            pst = con.prepareStatement(a);
            rs = pst.executeQuery(a);
            
               while (rs.next()){
                   //System.out.println("this is while");
               ProductName=rs.getString(1);
               Price = Double.parseDouble(rs.getString(2));
               Warranty=rs.getString(3);
               
               System.out.println(ProductName+" "+Price+" "+Warranty);
               }
            
               String b = "SELECT Name FROM customer_register WHERE ID = "+ CustomerID +"";
               //String b = "SELECT CustomerName FROM customer WHERE CustomerID = "+ CustomerID +""; santha
               
               pst = con.prepareStatement(b);
               rs = pst.executeQuery(b);
               
               
               
            while (rs.next()){
                    //System.out.println("this is while");
               CustomerName=rs.getString(1);

               System.out.println(CustomerName);
               }
            
            ProductTotalPrice = Price * Amount;
            System.out.println(ProductTotalPrice);

            String g="UPDATE allretail SET InvoiceID='"+InvoiceID+"', CustomerID='"+CustomerID+"', CustomerName='"+CustomerName+"',ProductID='"+ProductID+"',Price='"+Price+"', Amount='"+Amount+"',ProductTotalPrice='"+ProductTotalPrice+"',Warranty='"+Warranty+"' where RID = '"+RID+"'      ";
        
            pst = con.prepareStatement(g);
            pst.execute();
            
            
        } catch (Exception e) {
            System.out.println("Add button action performed error");

        }
        }
        
        InvoiceID = Integer.parseInt(InvoiceIdBox.getText());
        ShowDetailsCurrentInvoice(InvoiceID);
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateRBoxActionPerformed

    private void DeleteIBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteIBoxActionPerformed
       
        int x = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this invoice ?");
        if(x==0){
            try {
                
                String sql ="DELETE from invoice where InvoiceID ='"+InvoiceID+"'";
                pst = con.prepareStatement(sql);
                pst.execute();
                
                //tableload();
                
            
               
            } catch (SQLException e) {
                System.out.println("delete button error");
            }
        }
        ShowDetailsInvoiceID();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteIBoxActionPerformed

    private void AmountBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmountBoxActionPerformed

    private void SearchByInvoiceIdBoxRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByInvoiceIdBoxRActionPerformed

    int a = Integer.parseInt(SearchByInvoiceIdBox.getText());
        
    ShowDetailsSearchedInvoice(a);  
    
    ShowDetailsInvoiceID();
    
    

        
    }//GEN-LAST:event_SearchByInvoiceIdBoxRActionPerformed

    private void SearchByCustomerIdBoxRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByCustomerIdBoxRActionPerformed

    String a = SearchByCustomerIdBox.getText();
        
    ShowDetailsSearchedCustomer(a);

    
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchByCustomerIdBoxRActionPerformed

    private void RTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RTableMouseClicked

        int x = RTable.getSelectedRow();
        
                String RIDu = RTable.getValueAt(x, 0).toString();
                String InvoiceID = RTable.getValueAt(x, 1).toString();
                String CustomerID= RTable.getValueAt(x, 2).toString();
                String CustomerName= RTable.getValueAt(x, 3).toString();
                String ProductID= RTable.getValueAt(x, 4).toString();
                String ProductName= RTable.getValueAt(x, 5).toString();
                String Price= RTable.getValueAt(x, 6).toString();
                String Amount= RTable.getValueAt(x, 7).toString();
                String ProductTotalPrice= RTable.getValueAt(x, 8).toString();
                String Warranty= RTable.getValueAt(x, 9).toString();
                jLabel9.setText(RIDu);
                InvoiceIdBox.setText(InvoiceID);
                CustomerIdBox.setText(CustomerID);
                ProductIdBox.setText(ProductID);
                AmountBox.setText(Amount);
                
                this.RID = Integer.parseInt(RIDu);
                
                

        // TODO add your handling code here:
    }//GEN-LAST:event_RTableMouseClicked

    private void DeleteRBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRBoxActionPerformed
        
        
        
        int x = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this entry ?");
        if(x==0){
            try {
                String id = jLabel9.getText();
                String sql ="DELETE from allretail where RID ='"+id+"'";
                pst = con.prepareStatement(sql);
                pst.execute();
                //tableload();
            InvoiceID = Integer.parseInt(InvoiceIdBox.getText());
            ShowDetailsCurrentInvoice(InvoiceID);
            
               
            } catch (Exception e) {
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteRBoxActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
    
    InvoiceID = Integer.parseInt(InvoiceIdBox.getText());    
        
    ShowDetailsCurrentInvoice(InvoiceID);
        
        try {
            String a = "SELECT SUM(ProductTotalPrice) ptprice FROM allretail WHERE InvoiceID = "+InvoiceID+"";
            
            pst = con.prepareStatement(a);
            rs = pst.executeQuery(a);
            
            
            
            while (rs.next()){
                   //System.out.println("this is while");
                TotalPrice = Double.parseDouble(rs.getString(1));
               
                System.out.println(TotalPrice);
               }
            
        } catch (Exception e) {
                System.out.println("aaaaaaaaaaaaaaaaaaaaa");
        }
        
        String TotalPriceS = String.valueOf(TotalPrice);
        
        TotalRsLabel.setText(TotalPriceS); 
        
    //ShowAvailablePoints();
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void PayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayButtonActionPerformed

        
        PaidAmount = Double.parseDouble(PaidRsBox.getText());   
        change = PaidAmount - TotalPrice;
        
        System.out.println(TotalPrice +" "+ PaidAmount +" "+change);

        String changes = String.valueOf(change);
        
        CustomerName= "yasith";
        
          ChangeRsLabel.setText(changes);
        try {
            String g = "INSERT INTO invoice(InvoiceID,CustomerName,TotalRS,PaidRS,changeRS) values ('"+ InvoiceID +"','"+ CustomerName +"','"+ TotalPrice +"','"+ PaidAmount +"','"+ change +"')";
        
        pst = con.prepareStatement(g);
        pst.execute();
        
        } catch (SQLException e) {
            System.out.println("Pay button error");
        }
        
        ShowDetailsInvoiceID();   
        
        ShowDetailsReceipt();
        // TODO add your handling code here:
    }//GEN-LAST:event_PayButtonActionPerformed

    private void SearchByInvoiceIdBoxIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByInvoiceIdBoxIActionPerformed
    
        int a = Integer.parseInt(SearchByInvoiceIdBox2.getText());
        
        InvoiceID = a;
        ShowDetailsInvoiceID();
        
        ShowDetailsReceipt();
        

        // TODO add your handling code here:
    }//GEN-LAST:event_SearchByInvoiceIdBoxIActionPerformed

    private void ITableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ITableMouseClicked

        try {
        int x = ITable.getSelectedRow();
        
        String InvoiceID = ITable.getValueAt(x, 0).toString();
        String customerName = ITable.getValueAt(x, 1).toString();
        String TotalRS = ITable.getValueAt(x, 2).toString();
        String PaidRS = ITable.getValueAt(x, 3).toString();
        String changeRS = ITable.getValueAt(x, 4).toString();
        
        this.InvoiceID = Integer.parseInt(InvoiceID);
        this.CustomerName = customerName;
        TotalRsLabel.setText(TotalRS);
        PaidRsBox.setText(PaidRS);
        ChangeRsLabel.setText(changeRS);
        } catch (Exception e) {
            System.out.println("Error in table I table mouse clicked ");
            
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_ITableMouseClicked

    private void UpdateIBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateIBoxActionPerformed

    int y = JOptionPane.showConfirmDialog(null, "Are you sure you want to update entry?");
        
        if(y==0)
        {    
        
        PaidAmount = Double.parseDouble(PaidRsBox.getText()); 
        
        TotalPrice = Double.parseDouble(TotalRsLabel.getText());
        
        change = PaidAmount - TotalPrice;
        
        System.out.println(TotalPrice +" "+ PaidAmount +" "+change);

        String changes = String.valueOf(change);
        
        //CustomerName= "yasith";
        
          ChangeRsLabel.setText(changes);
        try {
            
        String f="UPDATE invoice SET InvoiceID='"+ InvoiceID +"', CustomerName='"+ CustomerName +"', TotalRS='"+ TotalPrice +"',PaidRS='"+ PaidAmount +"',changeRS='"+ change +"' where InvoiceID = '"+InvoiceID+"' ";
        pst = con.prepareStatement(f);
        pst.execute();
        
        } catch (SQLException e) {
            System.out.println("Update button error");
        }
        
        ShowDetailsInvoiceID();
        
        }    
            
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateIBoxActionPerformed

    private void ClearRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearRButtonActionPerformed
        
    jLabel9.setText("");
    InvoiceIdBox.setText("");
    CustomerIdBox.setText("");
    ProductIdBox.setText("");
    AmountBox.setText("");    
    
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearRButtonActionPerformed

    private void ClearIButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearIButtonActionPerformed
        
    TotalRsLabel.setText("");
    PaidRsBox.setText("");
    ChangeRsLabel.setText("");
    
        
            // TODO add your handling code here:
    }//GEN-LAST:event_ClearIButtonActionPerformed

    private void InvoiceIdBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InvoiceIdBoxKeyPressed
        // TODO add your handling code here:
        int key100=evt.getKeyCode();
        if((key100>=evt.VK_0 && key100<=evt.VK_9)||
                (key100>=evt.VK_NUMPAD0 && key100>=evt.VK_NUMPAD9)||
                (key100==KeyEvent.VK_BACK_SPACE)||(evt.getKeyChar()=='.'))
        {
            InvoiceIdBox.setEditable(true);
            jLabel12.setText("");
        }
        else
        {
            InvoiceIdBox.setEditable(false);
            jLabel12.setText("* invalid index");
            getToolkit().beep();
            evt.consume();
        }
        
    }//GEN-LAST:event_InvoiceIdBoxKeyPressed

    private void UsedPointsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsedPointsBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsedPointsBoxActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        main1 m1 = new main1();
        m1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    jLabel9.setText("");
    InvoiceIdBox.setText("100");
    CustomerIdBox.setText("1");
    ProductIdBox.setText("1");
    AmountBox.setText("2");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CustomerIdBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomerIdBoxKeyPressed
        // TODO add your handling code here:
         int key100=evt.getKeyCode();
        if((key100>=evt.VK_0 && key100<=evt.VK_9)||
                (key100>=evt.VK_NUMPAD0 && key100>=evt.VK_NUMPAD9)||
                (key100==KeyEvent.VK_BACK_SPACE)||(evt.getKeyChar()=='.'))
        {
            CustomerIdBox.setEditable(true);
            jLabel12.setText("");
        }
        else
        {
            CustomerIdBox.setEditable(false);
            jLabel12.setText("* invalid index");
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_CustomerIdBoxKeyPressed

    private void ProductIdBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductIdBoxKeyPressed
        // TODO add your handling code here:
//            int key100=evt.getKeyCode();
//        if((key100>=evt.VK_0 && key100<=evt.VK_9)||
//                (key100>=evt.VK_NUMPAD0 && key100>=evt.VK_NUMPAD9)||
//                (key100==KeyEvent.VK_BACK_SPACE)||(evt.getKeyChar()=='.'))
//        {
//            ProductIdBox.setEditable(true);
//            jLabel12.setText("");
//        }
//        else
//        {
//            ProductIdBox.setEditable(false);
//            jLabel12.setText("* invalid index");
//            getToolkit().beep();
//            evt.consume();
//        }
    }//GEN-LAST:event_ProductIdBoxKeyPressed

    private void AmountBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AmountBoxKeyPressed
        // TODO add your handling code here:
             int key100=evt.getKeyCode();
        if((key100>=evt.VK_0 && key100<=evt.VK_9)||
                (key100>=evt.VK_NUMPAD0 && key100>=evt.VK_NUMPAD9)||
                (key100==KeyEvent.VK_BACK_SPACE)||(evt.getKeyChar()=='.'))
        {
            AmountBox.setEditable(true);
            jLabel12.setText("");
        }
        else
        {
            AmountBox.setEditable(false);
            jLabel12.setText("* invalid index");
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_AmountBoxKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRetail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRetail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField AmountBox;
    private javax.swing.JLabel AvailablePointslabel;
    private javax.swing.JLabel ChangeRsLabel;
    private javax.swing.JButton ClearIButton;
    private javax.swing.JButton ClearRButton;
    private javax.swing.JTextField CustomerIdBox;
    private javax.swing.JButton DeleteIBox;
    private javax.swing.JButton DeleteRBox;
    private javax.swing.JTable ITable;
    private javax.swing.JTextField InvoiceIdBox;
    private javax.swing.JTextField PaidRsBox;
    private javax.swing.JButton PayButton;
    private javax.swing.JTextField ProductIdBox;
    private javax.swing.JTable RTable;
    private javax.swing.JTable ReceiptTable;
    private javax.swing.JTextField SearchByCustomerIdBox;
    private javax.swing.JButton SearchByCustomerIdBoxR;
    private javax.swing.JTextField SearchByInvoiceIdBox;
    private javax.swing.JTextField SearchByInvoiceIdBox2;
    private javax.swing.JButton SearchByInvoiceIdBoxI;
    private javax.swing.JButton SearchByInvoiceIdBoxR;
    private javax.swing.JLabel TotalRsLabel;
    private javax.swing.JButton UpdateIBox;
    private javax.swing.JButton UpdateRBox;
    private javax.swing.JTextField UsedPointsBox;
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
